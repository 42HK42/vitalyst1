name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:5
        env:
          NEO4J_AUTH: neo4j/test_password
        ports:
          - 7687:7687
          - 7474:7474

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Install Node.js dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run backend tests
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: test_password
      run: |
        cd backend
        pytest

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test

    - name: Run linting
      run: |
        cd backend
        flake8 .
        black . --check
        cd ../frontend
        npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Build backend Docker image
      run: docker build -t vitalyst-backend -f backend/Dockerfile.backend ./backend

    - name: Build frontend Docker image
      run: docker build -t vitalyst-frontend -f frontend/Dockerfile ./frontend
